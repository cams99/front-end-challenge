{"version":3,"sources":["components/HeaderPage.js","components/GeneralTable.js","types/employeesTypes.js","utils/utils.js","pages/Employees/components/EmployeeDrawer.js","components/MenuRoutes.js","pages/Employees/Employees.js","actions/employeesActions.js","components/MenuView.js","components/Avatar.js","components/AppLayout.js","components/NotFound.js","Router.js","App.js","reducers/employeesReducer.js","reducers/index.js","index.js"],"names":["Title","Typography","HeaderPage","showDrawer","title","titleButton","type","justify","align","style","marginBottom","xs","sm","md","lg","className","onClick","defaultProps","GeneralTable","columns","dataSource","loading","handlerEditRow","handlerDeleteRow","handlerControls","dataIndex","render","_","data","placement","content","onConfirm","okText","cancelText","trigger","shape","MoreOutlined","useState","concat","dataColumns","marginTop","pagination","pageSize","responsive","rowKey","scroll","x","filtered","e","console","log","GET_EMPLOYEES","EMPLOYEE_ACTIONS","LOADING","EMPLOYEE_LOADING","ERROR","EMPLOYEE_ERROR","validateQuantity","input","isNaN","Number","EmployeesDrawer","edit","editData","visible","closable","editEmployee","addEmployee","employeeLoading","useSelector","employeesReducer","id","setId","name","setName","salary","setSalary","age","setAge","useEffect","onClose","width","zIndex","gutter","src","alt","preview","value","disabled","placeholder","size","onChange","target","textAlign","htmlType","includes","message","warning","MenuRoutes","key","icon","route","component","employees","error","successMessage","employeeError","dispatch","useDispatch","searchInput","useRef","setVisible","editMode","setEditMode","editDataDrawer","setEditDataDrawer","a","axios","get","payload","map","employee","employee_name","employee_salary","employee_age","response","success","handleSearch","confirm","handleReset","clearFilters","editRow","filterDropdown","setSelectedKeys","selectedKeys","padding","ref","onPressEnter","display","SearchOutlined","closeDropdown","filterIcon","color","undefined","onFilter","record","toString","toLowerCase","onFilterDropdownVisibleChange","setTimeout","current","select","text","sorter","b","row","delete","put","headers","post","MenuView","history","useHistory","setKey","actualPath","find","m","location","pathname","returnIcon","iconName","UsergroupAddOutlined","fontSize","mode","background","length","option","Item","margin","height","to","paddingLeft","Avatar","collapsed","userName","process","marginLeft","Content","Layout","Sider","AppLayout","router","setCollapsed","onCollapse","collapsible","breakpoint","theme","MenuUnfoldOutlined","MenuFoldOutlined","NotFound","status","subTitle","extra","withRouter","r","exact","path","createHashHistory","App","props","INITIAL_STATE","usersReducer","state","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e10280c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { Button, Col, Row, Typography } from 'antd'\n\nconst { Title } = Typography\n\nconst HeaderPage = ({ showDrawer, title, titleButton }) => {\n  const handlerShowDrawer = () => {\n    showDrawer()\n  }\n\n  return (\n    <Row\n      type='flex'\n      justify='center'\n      align='top'\n      style={{ marginBottom: '20px' }}\n    >\n      <Col xs={24} sm={24} md={12} lg={12}>\n        <Title>{title}</Title>\n      </Col>\n      <Col xs={24} sm={24} md={12} lg={12} className='header-button'>\n        {titleButton && (\n          <Button className='new-button' onClick={handlerShowDrawer}>\n            {titleButton}\n          </Button>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nHeaderPage.defaultProps = {\n  title: 'Title',\n}\n\nHeaderPage.propTypes = {\n  title: PropTypes.string,\n  titleButton: PropTypes.string,\n  showDrawer: PropTypes.func,\n}\n\nexport default HeaderPage\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Table,\n  Col,\n  Button,\n  Row,\n  Card,\n  Popover,\n  Divider,\n  Popconfirm,\n} from 'antd'\nimport { MoreOutlined } from '@ant-design/icons'\n\nconst GeneralTable = ({\n  columns,\n  dataSource,\n  loading,\n  handlerEditRow,\n  handlerDeleteRow,\n}) => {\n  const handlerControls = [\n    {\n      title: '',\n      dataIndex: 'id',\n      align: 'right',\n      render: (_, data) => (\n        <Popover\n          placement='left'\n          content={\n            <div>\n              {handlerEditRow && (\n                <span\n                  className={'options-items'}\n                  onClick={() => handlerEditRow(data)}\n                >\n                  Edit\n                </span>\n              )}\n              {handlerEditRow && handlerDeleteRow && (\n                <Divider className={'divider-margins'} type={'horizontal'} />\n              )}\n              {handlerDeleteRow && (\n                <Popconfirm\n                  title='Estas seguro de borrar el elemento selccionado?'\n                  onConfirm={() => handlerDeleteRow(data)}\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className={'options-items'}>Delete</span>\n                </Popconfirm>\n              )}\n            </div>\n          }\n          trigger='click'\n        >\n          {(handlerEditRow || handlerDeleteRow) && (\n            <Button shape={'circle'} className={'settings-button'}>\n              <MoreOutlined />\n            </Button>\n          )}\n        </Popover>\n      ),\n    },\n  ]\n\n  const [dataColumns] = useState(columns.concat(handlerControls))\n\n  return (\n    <Row>\n      <Col xs={24} sm={24} md={24} lg={24}>\n        <Card className={'card-border-radius'} style={{ marginTop: '20px' }}>\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={24}>\n              <Table\n                className={'CustomTableClass'}\n                dataSource={dataSource}\n                columns={dataColumns}\n                pagination={{\n                  pageSize: 5,\n                  responsive: true,\n                }}\n                loading={loading}\n                rowKey='id'\n                scroll={{ x: true }}\n                filtered={e => console.log(e)}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nGeneralTable.defaultProps = {\n  loading: false,\n}\n\nGeneralTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dataSource: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loading: PropTypes.bool,\n  handlerEditRow: PropTypes.func,\n  handlerDeleteRow: PropTypes.func,\n}\n\nexport default GeneralTable\n","export const GET_EMPLOYEES = 'GET_EMPLOYEES'\nexport const EMPLOYEE_ACTIONS = 'EMPLOYEE_ACTIONS'\nexport const LOADING = 'LOADING'\nexport const EMPLOYEE_LOADING = 'EMPLOYEE_LOADING'\nexport const ERROR = 'ERROR'\nexport const EMPLOYEE_ERROR = 'EMPLOYEE_ERROR'\n","export const validateQuantity = input =>\n  !input || isNaN(Number(input)) || Number(input) < 0\n","import { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport {\n  Button,\n  Col,\n  Divider,\n  Drawer,\n  Input,\n  Row,\n  Typography,\n  message,\n  Image,\n} from 'antd'\nimport { validateQuantity } from '@utils/utils'\n\nconst { Title } = Typography\n\nfunction EmployeesDrawer({\n  edit,\n  editData,\n  visible,\n  closable,\n  editEmployee,\n  addEmployee,\n}) {\n  const { employeeLoading } = useSelector(\n    ({ employeesReducer }) => employeesReducer\n  )\n  const [id, setId] = useState('')\n  const [name, setName] = useState('')\n  const [salary, setSalary] = useState('')\n  const [age, setAge] = useState(null)\n\n  const loadInformation = () => {\n    setId(edit ? editData.id : '')\n    setName(edit ? editData.name : '')\n    setSalary(edit ? editData.salary : '')\n    setAge(edit ? editData.age : '')\n  }\n\n  useEffect(() => {\n    loadInformation()\n    if (employeeLoading) closable()\n    // eslint-disable-next-line\n  }, [visible])\n\n  const saveData = () => {\n    if (\n      [name, salary, age].includes('') ||\n      [name, salary, age].includes(null)\n    ) {\n      return message.warning('All fields are required')\n    } else if (validateQuantity(salary)) {\n      return message.warning('Salary field is not a number')\n    } else if (validateQuantity(age)) {\n      return message.warning('Age field is not a number')\n    }\n\n    let data = {\n      name,\n      salary,\n      age,\n    }\n\n    if (edit) {\n      editEmployee(id, data)\n    } else {\n      addEmployee(data)\n    }\n  }\n\n  return (\n    <Drawer\n      className={'employees-drawer'}\n      placement='right'\n      closable={false}\n      onClose={closable}\n      visible={visible}\n      width={'65vw'}\n      zIndex={1050}\n    >\n      <Row gutter={16}>\n        <Title> {edit ? 'Edit Employee' : 'New Employee'} </Title>\n        <Divider className={'divider-custom-margins'} />\n        {edit && editData.name && (\n          <Row gutter={16} className={'section-space-field'}>\n            <Col\n              xs={24}\n              sm={24}\n              md={24}\n              lg={24}\n              className='employee-image-container'\n            >\n              <div>\n                <div className={'title-space-field'}>Image</div>\n                <Image\n                  className='employee-image'\n                  src={`https://robohash.org/${editData.name}`}\n                  alt='Employee'\n                  preview={false}\n                />\n              </div>\n            </Col>\n          </Row>\n        )}\n        <Row gutter={16} className={'section-space-field'}>\n          {edit && (\n            <Col xs={12} sm={12} md={12} lg={12}>\n              <div className={'title-space-field'}>Id</div>\n              <Input\n                value={id}\n                disabled={true}\n                placeholder={'Id'}\n                size={'large'}\n              />\n            </Col>\n          )}\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <div className={'title-space-field'}>Name*</div>\n            <Input\n              value={name}\n              onChange={value => setName(value.target.value)}\n              placeholder={'Name'}\n              size={'large'}\n            />\n          </Col>\n        </Row>\n        <Row gutter={16} className={'section-space-field'}>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <div className={'title-space-field'}>Salary*</div>\n            <Input\n              value={salary}\n              onChange={value => setSalary(value.target.value)}\n              placeholder={'Salary'}\n              size={'large'}\n            />\n          </Col>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <div className={'title-space-field'}>Age*</div>\n            <Input\n              value={age}\n              onChange={value => setAge(value.target.value)}\n              placeholder={'Age'}\n              size={'large'}\n            />\n          </Col>\n        </Row>\n      </Row>\n\n      <Row gutter={16}>\n        <Divider className={'divider-custom-margins'} />\n        <Col xs={24} sm={24} md={24} lg={24} style={{ textAlign: 'right' }}>\n          <Button type={'link'} className='cancel-button' onClick={closable}>\n            Cancel\n          </Button>\n          <Button\n            loading={employeeLoading}\n            htmlType='submit'\n            className='new-button'\n            onClick={saveData}\n          >\n            Save\n          </Button>\n        </Col>\n      </Row>\n    </Drawer>\n  )\n}\n\nEmployeesDrawer.propTypes = {\n  edit: PropTypes.bool.isRequired,\n  editData: PropTypes.object,\n  visible: PropTypes.bool.isRequired,\n  closable: PropTypes.func.isRequired,\n  editEmployee: PropTypes.func.isRequired,\n  addEmployee: PropTypes.func.isRequired,\n}\n\nexport default EmployeesDrawer\n","import Employees from '@pages/Employees/Employees'\n\nexport const MenuRoutes = [\n  {\n    name: 'Employees',\n    key: 'employees',\n    icon: 'employees',\n    route: '/employees',\n    component: Employees,\n  },\n]\n","import { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Input, Button, Space, message } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport HeaderPage from '@components/HeaderPage'\nimport GeneralTable from '@components/GeneralTable'\nimport {\n  addEmployee,\n  deleteEmployee,\n  editEmployee,\n  getEmployees,\n} from '@actions/employeesActions'\nimport EmployeesDrawer from './components/EmployeeDrawer'\n\nconst Employees = () => {\n  const { employees, loading, error, successMessage, employeeError } =\n    useSelector(({ employeesReducer }) => employeesReducer)\n  const dispatch = useDispatch()\n  const searchInput = useRef()\n  const [visible, setVisible] = useState(false)\n  const [editMode, setEditMode] = useState(false)\n  const [editDataDrawer, setEditDataDrawer] = useState(null)\n\n  useEffect(() => {\n    dispatch(getEmployees())\n    // eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    if (error) message.error(error)\n  }, [error])\n\n  useEffect(() => {\n    if (employeeError) message.error(employeeError)\n    if (successMessage) {\n      message.success(successMessage)\n      setVisible(false)\n    }\n  }, [employeeError, successMessage])\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(confirm)}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type='primary'\n            onClick={() => handleSearch(confirm)}\n            icon={<SearchOutlined />}\n            size='small'\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size='small'\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n          <Button\n            type='link'\n            size='small'\n            onClick={() => {\n              confirm({ closeDropdown: false })\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100)\n      }\n    },\n    render: text => text,\n  })\n\n  const handleSearch = confirm => confirm()\n\n  const handleReset = clearFilters => clearFilters()\n\n  const showDrawer = () => {\n    setVisible(true)\n    setEditMode(false)\n  }\n\n  const editRow = data => {\n    setEditDataDrawer(data)\n    setVisible(true)\n    setEditMode(true)\n  }\n\n  const deleteRow = row => {\n    dispatch(deleteEmployee(row.id))\n  }\n\n  const columns = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      render: (_, data) => <span onClick={() => editRow(data)}>{data.id}</span>,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      ...getColumnSearchProps('name'),\n    },\n    {\n      title: 'Salary',\n      dataIndex: 'salary',\n      sorter: (a, b) => a.salary - b.salary,\n      responsive: ['md'],\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      sorter: (a, b) => a.age - b.age,\n      responsive: ['md'],\n    },\n  ]\n\n  return (\n    <>\n      <HeaderPage\n        title={'Employees'}\n        titleButton={'New employee'}\n        showDrawer={showDrawer}\n      />\n      <GeneralTable\n        columns={columns}\n        dataSource={employees}\n        loading={loading}\n        handlerEditRow={editRow}\n        handlerDeleteRow={deleteRow}\n      />\n      <EmployeesDrawer\n        closable={() => setVisible(false)}\n        visible={visible}\n        edit={editMode}\n        editData={editDataDrawer}\n        editEmployee={(id, data) => dispatch(editEmployee(id, data))}\n        addEmployee={data => dispatch(addEmployee(data))}\n      />\n    </>\n  )\n}\n\nexport default Employees\n","import axios from 'axios'\nimport {\n  EMPLOYEE_ACTIONS,\n  EMPLOYEE_ERROR,\n  EMPLOYEE_LOADING,\n  ERROR,\n  GET_EMPLOYEES,\n  LOADING,\n} from '../types/employeesTypes'\n\nexport const getEmployees = () => async dispatch => {\n  dispatch({\n    type: LOADING,\n  })\n  try {\n    const employees = await axios.get(\n      'https://dummy.restapiexample.com/api/v1/employees'\n    )\n    dispatch({\n      type: GET_EMPLOYEES,\n      payload: employees.data.data.map(employee => ({\n        id: employee.id,\n        name: employee.employee_name,\n        salary: employee.employee_salary,\n        age: employee.employee_age,\n      })),\n    })\n  } catch (error) {\n    console.log(error)\n    dispatch({\n      type: ERROR,\n      payload: error.response.data.message,\n    })\n  }\n}\n\nexport const addEmployee = data => async dispatch => {\n  dispatch({\n    type: EMPLOYEE_LOADING,\n  })\n  try {\n    const response = await axios.post(\n      'https://dummy.restapiexample.com/api/v1/create',\n      data,\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n        },\n      }\n    )\n    dispatch({\n      type: EMPLOYEE_ACTIONS,\n      payload: response.data.message,\n    })\n  } catch (error) {\n    console.log(error)\n    dispatch({\n      type: EMPLOYEE_ERROR,\n      payload: error.response.data.message,\n    })\n  }\n}\n\nexport const editEmployee = (id, data) => async dispatch => {\n  dispatch({\n    type: EMPLOYEE_LOADING,\n  })\n  try {\n    const response = await axios.put(\n      `https://dummy.restapiexample.com/api/v1/update/${id}`,\n      data,\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n        },\n      }\n    )\n    dispatch({\n      type: EMPLOYEE_ACTIONS,\n      payload: response.data.message,\n    })\n  } catch (error) {\n    console.log(error)\n    dispatch({\n      type: EMPLOYEE_ERROR,\n      payload: error.response.data.message,\n    })\n  }\n}\n\nexport const deleteEmployee = id => async dispatch => {\n  dispatch({\n    type: EMPLOYEE_LOADING,\n  })\n  try {\n    const response = await axios.delete(\n      `https://dummy.restapiexample.com/api/v1/delete/${id}`\n    )\n    dispatch({\n      type: EMPLOYEE_ACTIONS,\n      payload: response.data.message,\n    })\n  } catch (error) {\n    console.log(error)\n    dispatch({\n      type: EMPLOYEE_ERROR,\n      payload: error.response.data.message,\n    })\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { Menu } from 'antd'\nimport { UsergroupAddOutlined } from '@ant-design/icons'\nimport { Link, useHistory } from 'react-router-dom'\nimport { MenuRoutes } from '@components/MenuRoutes'\n\nconst MenuView = () => {\n  const history = useHistory()\n  const [key, setKey] = useState('')\n\n  useEffect(() => {\n    let actualPath = MenuRoutes.find(m => m.route === history.location.pathname)\n    actualPath && setKey(actualPath.key)\n  }, [history.location.pathname])\n\n  let returnIcon = iconName => {\n    switch (iconName) {\n      case 'employees':\n        return <UsergroupAddOutlined style={{ fontSize: '18px' }} />\n      default:\n        return <></>\n    }\n  }\n\n  return (\n    <Menu\n      mode='inline'\n      selectedKeys={[key]}\n      style={{ background: 'transparent' }}\n    >\n      {MenuRoutes.length &&\n        MenuRoutes.map(option => (\n          <Menu.Item\n            className='center-flex'\n            key={option.key}\n            icon={returnIcon()}\n            style={{ margin: '0', height: '50px' }}\n            onClick={() => setKey(option.key)}\n          >\n            <Link to={option.route}>\n              {returnIcon(option.icon)}\n              <span className='menu-item-title' style={{ paddingLeft: '13px' }}>\n                {option.name}\n              </span>\n            </Link>\n          </Menu.Item>\n        ))}\n    </Menu>\n  )\n}\nexport default MenuView\n","import PropTypes from 'prop-types'\n\nconst Avatar = ({ collapsed, userName }) => (\n  <div className='user-icon'>\n    <img\n      style={{ height: '100%' }}\n      src={`${process.env.PUBLIC_URL}/usuario.png`}\n      alt={'Usuario'}\n    />\n    <span\n      style={\n        collapsed\n          ? { display: 'none', marginLeft: '0' }\n          : { display: 'block', marginLeft: '10px' }\n      }\n    >\n      {userName}\n    </span>\n  </div>\n)\n\nAvatar.defaultProps = {\n  userName: 'User',\n}\n\nAvatar.propTypes = {\n  userName: PropTypes.string,\n  collapsed: PropTypes.bool.isRequired,\n}\n\nexport default Avatar\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport MenuView from '@components/MenuView'\nimport Avatar from '@components/Avatar'\n\nimport { Layout, Divider } from 'antd'\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons'\n\nconst { Content, Sider } = Layout\n\nconst AppLayout = ({ router }) => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const onCollapse = () => {\n    setCollapsed(!collapsed)\n  }\n\n  return (\n    <Layout className='site-layout-background'>\n      <Sider\n        trigger={null}\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n        breakpoint='lg'\n        theme={'light'}\n        style={{ background: '#cbe6f3' }}\n      >\n        <div className='logo'>\n          <div onClick={onCollapse} className={'fold-unfold-menu center-flex'}>\n            {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n          </div>\n          <img\n            style={{\n              height: '100%',\n            }}\n            alt={'Logo'}\n            src={`${process.env.PUBLIC_URL}/logo192.png`}\n          />\n        </div>\n        <Divider type={'horizontal'} />\n        <Avatar collapsed={collapsed} />\n        <Divider type={'horizontal'} />\n        <MenuView />\n      </Sider>\n      <Content className='layout-content'>{router}</Content>\n    </Layout>\n  )\n}\n\nAppLayout.propTypes = {\n  router: PropTypes.node.isRequired,\n}\n\nexport default AppLayout\n","import { Link } from 'react-router-dom'\nimport { Result, Button } from 'antd'\nimport { MenuRoutes } from '@components/MenuRoutes'\n\nconst NotFound = () => (\n  <Result\n    status='404'\n    title='404'\n    subTitle='Oops, la página que visitaste no existe.'\n    extra={\n      <Button type='primary'>\n        <Link to={`${MenuRoutes.find(route => route.route).route}`}>\n          Volver al Home\n        </Link>\n      </Button>\n    }\n  />\n)\n\nexport default NotFound\n","import { withRouter } from 'react-router'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { MenuRoutes } from '@components/MenuRoutes'\nimport NotFound from '@components/NotFound'\n\nconst Router = () => (\n  <Switch>\n    {MenuRoutes.map(r => (\n      <Route exact key={r.key} path={r.route} component={r.component} />\n    ))}\n    <Redirect to={`${MenuRoutes.find(route => route.route).route}`} />\n    <Route component={NotFound} />\n  </Switch>\n)\n\nexport default withRouter(Router)\n","import { Router, Switch, Route } from 'react-router-dom'\nimport { createHashHistory } from 'history'\nimport AppLayout from '@components/AppLayout'\nimport AppRouter from './Router'\n\nconst history = createHashHistory()\n\nconst App = () => (\n  <Router history={history}>\n    <Switch>\n      <Route\n        render={props => <AppLayout router={<AppRouter />} {...props} />}\n      />\n    </Switch>\n  </Router>\n)\n\nexport default App\n","import {\n  EMPLOYEE_ACTIONS,\n  EMPLOYEE_ERROR,\n  EMPLOYEE_LOADING,\n  ERROR,\n  GET_EMPLOYEES,\n  LOADING,\n} from '../types/employeesTypes'\n\nconst INITIAL_STATE = {\n  employees: [],\n  successMessage: false,\n  loading: false,\n  employeeLoading: false,\n  error: '',\n  employeeError: '',\n}\n\nconst usersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_EMPLOYEES:\n      return { ...state, employees: action.payload, loading: false, error: '' }\n\n    case EMPLOYEE_ACTIONS:\n      return {\n        ...state,\n        successMessage: action.payload,\n        employeeLoading: false,\n        employeeError: '',\n      }\n\n    case LOADING:\n      return { ...state, loading: true, error: '' }\n\n    case EMPLOYEE_LOADING:\n      return {\n        ...state,\n        employeeLoading: true,\n        employeeError: '',\n        successMessage: '',\n      }\n\n    case ERROR:\n      return { ...state, error: action.payload, loading: false }\n\n    case EMPLOYEE_ERROR:\n      return { ...state, employeeError: action.payload, employeeLoading: false }\n\n    default:\n      return state\n  }\n}\n\nexport default usersReducer\n","import { combineReducers } from 'redux'\nimport employeesReducer from './employeesReducer'\n\nexport default combineReducers({\n  employeesReducer,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'antd/dist/antd.css'\nimport './index.css'\n\nimport { applyMiddleware, createStore, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport reduxThunk from 'redux-thunk'\n\nimport reducers from './reducers'\n\nconst initialState = {}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(applyMiddleware(reduxThunk))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}